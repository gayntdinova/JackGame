class Egg
{
    field int initialPosition, screenPosition, iterations;

    constructor Egg new(int g){
        let initialPosition = g;
        let screenPosition = 0;
        let iterations = 0;
        do Screen.setColor(true);
        do draw();
        return this;
    }
    method boolean changeScreenPosition(){
        let iterations = iterations + 1;
        if (iterations - ((iterations / 16) * 16) = 0)
        {

            let screenPosition = screenPosition + 1;
            do Screen.setColor(true);
            do draw();
        }
        return screenPosition = 5;
    }
    //отрисовка яиц на экране во время падения
    method void draw(){
        if (initialPosition = 0)
        {
            if (screenPosition = 0)
            {
                do GraphicsOfEgg.drawEgg(86 * 32 + 2);
            }
            if (screenPosition = 1)
            {
                do GraphicsOfEgg.clearEgg(86 * 32 + 2);
                do GraphicsOfEgg.drawEgg(92 * 32 + 3);
            }
            if (screenPosition = 2)
            {
                do GraphicsOfEgg.clearEgg(92 * 32 + 3);
                do GraphicsOfEgg.drawEgg(100 * 32 + 4);
            }
            if (screenPosition = 3)
            {
                do GraphicsOfEgg.clearEgg(100 * 32 + 4);
                do GraphicsOfEgg.drawEgg(110 * 32 + 6);
            }
            if (screenPosition = 4)
            {
                do GraphicsOfEgg.clearEgg(110 * 32 + 6);
                do GraphicsOfEgg.drawEgg(120 * 32 + 7);
            }
            if (screenPosition = 5)
            {
                do GraphicsOfEgg.clearEgg(120 * 32 + 7);
            }
        }
        if (initialPosition = 2)
        {
            if (screenPosition = 0)
            {
                do GraphicsOfEgg.drawEgg(142 * 32 + 2);
            }
            if (screenPosition = 1)
            {
                do GraphicsOfEgg.clearEgg(142 * 32 + 2);
                do GraphicsOfEgg.drawEgg(148 * 32 + 3);
            }
            if (screenPosition = 2)
            {
                do GraphicsOfEgg.clearEgg(148 * 32 + 3);
                do GraphicsOfEgg.drawEgg(156 * 32 + 4);
            }
            if (screenPosition = 3)
            {
                do GraphicsOfEgg.clearEgg(156 * 32 + 4);
                do GraphicsOfEgg.drawEgg(166 * 32 + 6);
            }
            if (screenPosition = 4)
            {
                do GraphicsOfEgg.clearEgg(166 * 32 + 6);
                do GraphicsOfEgg.drawEgg(176 * 32 + 7);
            }
            if (screenPosition = 5)
            {
                do GraphicsOfEgg.clearEgg(176 * 32 + 7);
            }
        }
        if (initialPosition = 1)
        {
            if (screenPosition = 0)
            {
                do GraphicsOfEgg.drawEgg(96 * 32 + 28);
            }
            if (screenPosition = 1)
            {
                do GraphicsOfEgg.clearEgg(96 * 32 + 28);
                do GraphicsOfEgg.drawEgg(102 * 32 + 27);
            }
            if (screenPosition = 2)
            {
                do GraphicsOfEgg.clearEgg(102 * 32 + 27);
                do GraphicsOfEgg.drawEgg(106 * 32 + 26);
            }
            if (screenPosition = 3)
            {
                do GraphicsOfEgg.clearEgg(106 * 32 + 26);
                do GraphicsOfEgg.drawEgg(112 * 32 + 25);
            }
            if (screenPosition = 4)
            {
                do GraphicsOfEgg.clearEgg(112 * 32 + 25);
                do GraphicsOfEgg.drawEgg(120 * 32 + 24);
            }
            if (screenPosition = 5)
            {
                do GraphicsOfEgg.clearEgg(120 * 32 + 24);
            }
        }
        if (initialPosition = 3)
        {
            if (screenPosition = 0)
            {
                do GraphicsOfEgg.drawEgg(152 * 32 + 28);
            }
            if (screenPosition = 1)
            {
                do GraphicsOfEgg.clearEgg(152 * 32 + 28);
                do GraphicsOfEgg.drawEgg(158 * 32 + 27);
            }
            if (screenPosition = 2)
            {
                do GraphicsOfEgg.clearEgg(158 * 32 + 27);
                do GraphicsOfEgg.drawEgg(162 * 32 + 26);
            }
            if (screenPosition = 3)
            {
                do GraphicsOfEgg.clearEgg(162 * 32 + 26);
                do GraphicsOfEgg.drawEgg(168 * 32 + 25);
            }
            if (screenPosition = 4)
            {
                do GraphicsOfEgg.clearEgg(168 * 32 + 25);
                do GraphicsOfEgg.drawEgg(176 * 32 + 24);
            }
            if (screenPosition = 5)
            {
                do GraphicsOfEgg.clearEgg(176 * 32 + 24);
            }
        }
        return;
    }
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
    //возвращает позицию откуда падает(их 4)
    method int getPosition(){
        return initialPosition;
    }
    //возвращает стадию падения(их 5)
    method int getStage(){
        return screenPosition;
    }
}
