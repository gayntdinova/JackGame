class Game
{
    field Wolf wolf;
    field int score, eggDelay, eggDelayCounter;
    field boolean isOver;
    field Random random;
    field Queue eggsGroup;
    field Array groupsHeads;

    constructor Game new()
    {
        let wolf = Wolf.new();
        let score = 0;
        let eggDelay = 60;
        let eggDelayCounter = eggDelay;
        let isOver = false;
        let random = Random.new();
        let eggsGroup = Queue.new();
        let groupsHeads = Array.new(4);
        return this;
    }

    method void run()
    {
        var char key;
        var int position;

        while(true)
        {
            do GraphicsOfBackground.drawPressAnyButton(32*150+3);

            while (key = 0)
            {
                let key = Keyboard.keyPressed();
            }

            do Screen.clearScreen();
            do GraphicsOfBackground.drawBackground();
            do drawScore();
            do Chicken.drawRightChicken(32 * 124 + 30);
            do Chicken.drawRightChicken(32 * 67 + 30);
            do Chicken.drawLeftChicken(32 * 124);
            do Chicken.drawLeftChicken(32 * 67);

            while (~isOver)
            {
                let key = Keyboard.keyPressed();
                if (key = 52){ let position = 0;}
                if (key = 53){ let position = 1;}
                if (key = 49){ let position = 2;}
                if (key = 50){ let position = 3;}

                do wolf.setPosition(position);
                do wolf.draw();

                do Sys.wait(50);

                //проходится по группе яиц,двигая их
                do moveEggs();
                //проверяем не упало ли последнее яйцо
                do checkFalledEgg();

                //ускорение игры
                if (score > 11){let eggDelay = 60;}
                if (score > 18){let eggDelay = 40;}
                if (score > 26){let eggDelay = 30;}
                if (score > 36){let eggDelay = 22;}
                if (score > 50){let eggDelay = 17;}
                if (score > 70){let eggDelay = 14;}

                if (eggDelayCounter - ((eggDelayCounter/eggDelay)*eggDelay) = 0)
                {
                    let eggDelayCounter = 1;
                    do throwEgg();
                }
                else{let eggDelayCounter = eggDelayCounter + 1;}
            }
            //отрисовка фона при проигрыше
            do clear();
            do GraphicsOfBackground.drawEndBackground(32*100+13);
            do Sys.wait(2000);
        }
        return;
    }
    //чистит всё что надо перед повторным запуском
    method void clear()
    {
        var int i;
        var Egg head;

        do Screen.clearScreen();
        let score = 0;
        let eggDelay = 60;
        let eggDelayCounter = eggDelay;
        let isOver = false;
        do eggsGroup.clear();

        let i = 0;
        while (~(i = 4))
        {
            let head = groupsHeads[i];
            let groupsHeads[i] = null;
            let i = i + 1;
        }
        return;
    }
    //прибаляет счётчик яйцам, раз в сколько то таких вызовов преходит в следующую позицию
    method void moveEggs()
    {
        var QueueItem item;
        var Egg egg;

        let item = eggsGroup.getHead();

        while (~(item = null))
        {
            let egg = item.getEgg();
            do egg.changeScreenPosition();
            let item = item.getNext();
        }
        return;
    }
    //проверяет не упало ли яйцо, если упало, то удаляет из очереди и либо заканчивает игру, либо прибаляет скор
    method void checkFalledEgg()
    {
        var QueueItem head;
        var Egg egg;

        let head = eggsGroup.getHead();

        if (~(head = null))
        {
            let egg = head.getEgg();

            if (egg.getStage() = 5)
            {
                do eggsGroup.dequeue();
                if (~(wolf.getPosition() = egg.getPosition())){let isOver = true;}
                else
                {
                    let score = score + 1;
                    do drawScore();
                }
                do Screen.setColor(false);
                do egg.draw();
                do egg.dispose();
            }
        }
        return;
    }
    //бросает яйцо в рандомную точку
    method void throwEgg()
    {
        var int groupNumber;
        var boolean throwed;

        let groupNumber = random.rand();

        let throwed = false;

        //идём по всем местам, для спавная яиц от рандомного пока не находим где нет в начале яйца, далее кидаем туда яйцо
        while (~throwed)
        {
            let throwed = tryPush(groupNumber);
            let groupNumber = groupNumber + 1 - (((groupNumber + 1) / 4) * 4);
        }
        return;
    }
    //если не может кинуть в выбранное место яйцо, возвращает false иначе true и кидает его
    method boolean tryPush(int groupNumber)
    {
        var Egg newEgg;
        var Egg tailEgg;

        let tailEgg = groupsHeads[groupNumber];

        if (~(tailEgg = null))
        {
            if(tailEgg.getStage() = 0){return false;}
        }
        let newEgg = Egg.new(groupNumber);
        let groupsHeads[groupNumber] = newEgg;
        do eggsGroup.enqueue(newEgg);

        return true;
    }
    //отрисовка счёта
    method void drawScore()
    {
        var int counter;
        var int remainder;
        var int position;

        let position = 250;
        let counter = score;
        do Screen.setColor(false);
        do Screen.drawRectangle(position - 30, 10, position + 10, 19);
        do Screen.setColor(true);
        if(counter = 0){do drawNumber(0, position);}
        while(~(counter = 0))
        {
            let remainder = counter - ((counter / 10)*10);
            do drawNumber(remainder, position);
            let counter = counter / 10;
            let position = position - 10;
        }
        return;
    }

    //методы рисующие части цифр,вид цифр:
    // ||||||
    // ||  ||
    // ||||||
    // ||  ||
    // ||||||
    method void drawNumber(int number,int position)
    {
        if(number = 0)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 1)
        {
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
        }
        if(number = 2)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 3)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 4)
        {
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
        }
        if(number = 5)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 6)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 7)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
        }
        if(number = 8)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 9)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        return;
    }

    method void dispose()
    {
        do wolf.dispose();
        do eggsGroup.dispose();
        do random.dispose();
        do groupsHeads.dispose();

        do Memory.deAlloc(this);
		return;
    }
}
